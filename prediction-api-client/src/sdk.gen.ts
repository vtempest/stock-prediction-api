// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { PredictStatisticsData, PredictStatisticsResponses, PredictStatisticsErrors, GetFacilitiesData, GetFacilitiesResponses, GetDocumentationData, GetDocumentationResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Generate Statistic Predictions
 * Trains multiple machine learning models (Prophet, Random Forest, Ridge Regression) and generates energy consumption predictions with comprehensive validation metrics. The API performs feature engineering, model training, cross-validation, and final predictions for specified dates.
 */
export const predictStatistics = <ThrowOnError extends boolean = false>(options: Options<PredictStatisticsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PredictStatisticsResponses, PredictStatisticsErrors, ThrowOnError>({
        url: '/predict',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Available Facilities
 * Retrieve list of available facilities from metadata
 */
export const getFacilities = <ThrowOnError extends boolean = false>(options?: Options<GetFacilitiesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFacilitiesResponses, unknown, ThrowOnError>({
        url: '/facilities',
        ...options
    });
};

/**
 * API Documentation
 * Interactive API documentation (Swagger UI)
 */
export const getDocumentation = <ThrowOnError extends boolean = false>(options?: Options<GetDocumentationData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetDocumentationResponses, unknown, ThrowOnError>({
        url: '/docs',
        ...options
    });
};